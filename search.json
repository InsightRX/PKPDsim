[{"path":"https://insightrx.github.io/PKPDsim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ron Keizer. Author, maintainer. Jasmine Hughes. Author. Dominic Tong. Author. Kara Woo. Author. InsightRX. Copyright holder, funder.","code":""},{"path":"https://insightrx.github.io/PKPDsim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keizer R, Hughes J, Tong D, Woo K (2022). PKPDsim: Tools Performing Pharmacokinetic-Pharmacodynamic Simulations. https://github.com/InsightRX/PKPDsim, https://insightrx.github.io/PKPDsim/.","code":"@Manual{,   title = {PKPDsim: Tools for Performing Pharmacokinetic-Pharmacodynamic Simulations},   author = {Ron Keizer and Jasmine Hughes and Dominic Tong and Kara Woo},   year = {2022},   note = {https://github.com/InsightRX/PKPDsim, https://insightrx.github.io/PKPDsim/}, }"},{"path":"https://insightrx.github.io/PKPDsim/index.html","id":"pkpdsim","dir":"","previous_headings":"","what":"Tools for Performing Pharmacokinetic-Pharmacodynamic Simulations","title":"Tools for Performing Pharmacokinetic-Pharmacodynamic Simulations","text":"PKPDsim library numerical integration ODE systems, particular pharmacokinetic-pharmacodynamic (PK-PD) mixed-effects models.","code":""},{"path":"https://insightrx.github.io/PKPDsim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Performing Pharmacokinetic-Pharmacodynamic Simulations","text":"development version PKPDsim always --date improvements bug fixes. aim release PKPDsim CRAN least year, depending number impact updates made development version. CRAN version PKPDsim can installed using: development version PKPDsim can installed using:","code":"install.packages(\"PKPDsim\") devtools::install_github(\"InsightRX/PKPDsim\")"},{"path":"https://insightrx.github.io/PKPDsim/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Tools for Performing Pharmacokinetic-Pharmacodynamic Simulations","text":"welcome input community: think encountered bug, please submit issue GitHub page. Please include reproducible example unexpected behavior. Please open pull request fix updates improve package. ’re sure proposed changes useful within scope package, feel free contact one authors package.","code":""},{"path":"https://insightrx.github.io/PKPDsim/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Tools for Performing Pharmacokinetic-Pharmacodynamic Simulations","text":"functionality R package provided “”. authors adhere software development best practices, software may still contain unintended errors. InsightRX Inc. authors package can held liable damages resulting use software. use software package, user waives warranties, expressed implied, including warranties accuracy, quality suitability InsightRX particular purpose, either medical non-medical. ©","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVbolus.html","id":null,"dir":"Reference","previous_headings":"","what":"ADVAN-style equations — OneCompIVbolus","title":"ADVAN-style equations — OneCompIVbolus","text":"Adapted Abuhelwa et al. JPET 2015","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVbolus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADVAN-style equations — OneCompIVbolus","text":"","code":"OneCompIVbolus(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVbolus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ADVAN-style equations — OneCompIVbolus","text":"d data, NONMEM style data frame 1 subject columns TIME, AMT, MDV, DV, CL, V","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVbolus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ADVAN-style equations — OneCompIVbolus","text":"Returns dataframe populated columns A1, DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVbolus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ADVAN-style equations — OneCompIVbolus","text":"Functions calculating drug amount compartments common pharmacokinetic models (1,2,3 compartment IV bolus, IV infusion, first-order absorption models) Definitions: - *last: initial amount beginning time interval (t, t=t2-t1)   corresponding compartment (.e. drug amount end last time interval) - E* : sum Exit (elimination) rate constant corresponding compartment. IV bolus- 1 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVbolus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ADVAN-style equations — OneCompIVbolus","text":"Abuhelwa, . Y., Foster, D. J. R., Upton, R. N. (2015)   ADVAN-style analytical solutions common pharmacokinetic models. J   Pharmacol Toxicol Methods 73:42-8. DOI: 10.1016/j.vascn.2015.03.004","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVinfusion.html","id":null,"dir":"Reference","previous_headings":"","what":"IV infusion- 1 compartment — OneCompIVinfusion","title":"IV infusion- 1 compartment — OneCompIVinfusion","text":"IV infusion- 1 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVinfusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IV infusion- 1 compartment — OneCompIVinfusion","text":"","code":"OneCompIVinfusion(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVinfusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IV infusion- 1 compartment — OneCompIVinfusion","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV, RATE, RATEALL, DV, CL, V","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompIVinfusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IV infusion- 1 compartment — OneCompIVinfusion","text":"Returns dataframe populated columns A1, DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompOral.html","id":null,"dir":"Reference","previous_headings":"","what":"first-order absorption 1 compartment — OneCompOral","title":"first-order absorption 1 compartment — OneCompOral","text":"first-order absorption 1 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompOral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"first-order absorption 1 compartment — OneCompOral","text":"","code":"OneCompOral(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompOral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"first-order absorption 1 compartment — OneCompOral","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV,DV, CL, V, KA & F1","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/OneCompOral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"first-order absorption 1 compartment — OneCompOral","text":"Returns dataframe populated columns A1, A2 DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/PKPDsim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PKPDsim package — PKPDsim-package","title":"PKPDsim package — PKPDsim-package","text":"Simulate regimens PKPD models defined ODE systems","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/PKPDsim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PKPDsim package — PKPDsim-package","text":"Ron Keizer ronkeizer@gmail.com","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVbolus.html","id":null,"dir":"Reference","previous_headings":"","what":"IV bolus- 3 compartment — ThreeCompIVbolus","title":"IV bolus- 3 compartment — ThreeCompIVbolus","text":"IV bolus- 3 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVbolus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IV bolus- 3 compartment — ThreeCompIVbolus","text":"","code":"ThreeCompIVbolus(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVbolus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IV bolus- 3 compartment — ThreeCompIVbolus","text":"d data, Accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV,DV, CL, V1, Q12, V2, Q13, V3","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVbolus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IV bolus- 3 compartment — ThreeCompIVbolus","text":"Returns dataframe populated columns A1, A2, A3,DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusion.html","id":null,"dir":"Reference","previous_headings":"","what":"IV infusion- 3 compartment — ThreeCompIVinfusion","title":"IV infusion- 3 compartment — ThreeCompIVinfusion","text":"IV infusion- 3 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IV infusion- 3 compartment — ThreeCompIVinfusion","text":"","code":"ThreeCompIVinfusion(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IV infusion- 3 compartment — ThreeCompIVinfusion","text":"d data, Accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV,RATE, RATEALL, DV, CL, V1, Q12, V2, Q13, V3","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IV infusion- 3 compartment — ThreeCompIVinfusion","text":"Returns dataframe populated columns A1, A2, A3,DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusionMetab.html","id":null,"dir":"Reference","previous_headings":"","what":"3-compartment IV infusion with first-order metabolite formation — ThreeCompIVinfusionMetab","title":"3-compartment IV infusion with first-order metabolite formation — ThreeCompIVinfusionMetab","text":"3-compartment IV infusion first-order metabolite formation","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusionMetab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"3-compartment IV infusion with first-order metabolite formation — ThreeCompIVinfusionMetab","text":"","code":"ThreeCompIVinfusionMetab(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusionMetab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"3-compartment IV infusion with first-order metabolite formation — ThreeCompIVinfusionMetab","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV,RATE, RATEALL, DV, CL, V1, Q12, V2, Q13, V3, CLM,VM,km","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompIVinfusionMetab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"3-compartment IV infusion with first-order metabolite formation — ThreeCompIVinfusionMetab","text":"Returns dataframe populated columns A1, A2, A3,DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOral.html","id":null,"dir":"Reference","previous_headings":"","what":"first-order absorption- 3 compartment — ThreeCompOral","title":"first-order absorption- 3 compartment — ThreeCompOral","text":"first-order absorption- 3 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"first-order absorption- 3 compartment — ThreeCompOral","text":"","code":"ThreeCompOral(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"first-order absorption- 3 compartment — ThreeCompOral","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV,DV, CL, V2, Q3, V3, Q4, V4, KA & F1","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"first-order absorption- 3 compartment — ThreeCompOral","text":"Returns dataframe populated columns A1, A2, A3, A4 DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOralMetab.html","id":null,"dir":"Reference","previous_headings":"","what":"first-order absorption- 3 compartment-Metabolite — ThreeCompOralMetab","title":"first-order absorption- 3 compartment-Metabolite — ThreeCompOralMetab","text":"first-order absorption- 3 compartment-Metabolite","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOralMetab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"first-order absorption- 3 compartment-Metabolite — ThreeCompOralMetab","text":"","code":"ThreeCompOralMetab(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOralMetab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"first-order absorption- 3 compartment-Metabolite — ThreeCompOralMetab","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV,DV, CL, V2, Q3, V3, Q4, V4, KA & F1","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ThreeCompOralMetab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"first-order absorption- 3 compartment-Metabolite — ThreeCompOralMetab","text":"Returns dataframe populated columns A1, A2, A3, A4 DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVbolus.html","id":null,"dir":"Reference","previous_headings":"","what":"IV bolus- 2 compartment — TwoCompIVbolus","title":"IV bolus- 2 compartment — TwoCompIVbolus","text":"IV bolus- 2 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVbolus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IV bolus- 2 compartment — TwoCompIVbolus","text":"","code":"TwoCompIVbolus(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVbolus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IV bolus- 2 compartment — TwoCompIVbolus","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV, DV, CL, V1, Q, V2","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVbolus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IV bolus- 2 compartment — TwoCompIVbolus","text":"Returns dataframe populated columns A1, A2, DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVinfusion.html","id":null,"dir":"Reference","previous_headings":"","what":"IV infusion- 2 compartment — TwoCompIVinfusion","title":"IV infusion- 2 compartment — TwoCompIVinfusion","text":"IV infusion- 2 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVinfusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IV infusion- 2 compartment — TwoCompIVinfusion","text":"","code":"TwoCompIVinfusion(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVinfusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IV infusion- 2 compartment — TwoCompIVinfusion","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV, RATE, RATEALL, DV, CL, V1, Q, V2","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompIVinfusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IV infusion- 2 compartment — TwoCompIVinfusion","text":"Returns dataframe populated columns A1, A2, DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompOral.html","id":null,"dir":"Reference","previous_headings":"","what":"First-order absorption- 2 compartment — TwoCompOral","title":"First-order absorption- 2 compartment — TwoCompOral","text":"First-order absorption- 2 compartment","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompOral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First-order absorption- 2 compartment — TwoCompOral","text":"","code":"TwoCompOral(d)"},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompOral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First-order absorption- 2 compartment — TwoCompOral","text":"d data, accepts NONMEM style data frame 1 subject columns TIME, AMT,MDV,DV, CL, V2, Q, V3, KA & F1","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/TwoCompOral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"First-order absorption- 2 compartment — TwoCompOral","text":"Returns dataframe populated columns A1, A2, A3 DV","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Put vector values in quotes — add_quotes","title":"Put vector values in quotes — add_quotes","text":"Put vector values quotes","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put vector values in quotes — add_quotes","text":"","code":"add_quotes(x, quote = \"double\")"},{"path":"https://insightrx.github.io/PKPDsim/reference/add_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put vector values in quotes — add_quotes","text":"x vector string / numeric quote type quotes (`double` `single`)","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put vector values in quotes — add_quotes","text":"Character vector input quotation marks around value","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv.html","id":null,"dir":"Reference","previous_headings":"","what":"Add residual variability to the dependent variable — add_ruv","title":"Add residual variability to the dependent variable — add_ruv","text":"Add residual variability dependent variable","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add residual variability to the dependent variable — add_ruv","text":"","code":"add_ruv(x, ruv = list(), obs_type = 1)"},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add residual variability to the dependent variable — add_ruv","text":"x dependent value without residual variability ruv list specifying proportional, additive /exponential errors (`prop`, `add`, `exp`) obs_type vector observation types","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add residual variability to the dependent variable — add_ruv","text":"Input vector residual variability added","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv_to_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the increase in a specific quantile for a distribution on y when residual variability is added — add_ruv_to_quantile","title":"Calculate the increase in a specific quantile for a distribution on y when residual variability is added — add_ruv_to_quantile","text":"Calculate increase specific quantile distribution y residual variability added","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv_to_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the increase in a specific quantile for a distribution on y when residual variability is added — add_ruv_to_quantile","text":"","code":"add_ruv_to_quantile(y, sd_y, log_scale = FALSE, q = NULL, ruv = list(), ...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv_to_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the increase in a specific quantile for a distribution on y when residual variability is added — add_ruv_to_quantile","text":"y y sd_y standard deviation y without residual variability added. add normally distributed variability (potetially log-scale). log_scale add variability log scale (FALSE default, DEPRECATED!). q quantile ruv list residual variability (`prop` `add`) ... passed arguments","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/add_ruv_to_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the increase in a specific quantile for a distribution on y when residual variability is added — add_ruv_to_quantile","text":"Numeric vector y values residual variability","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_binomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Binomial adherence — adherence_binomial","title":"Binomial adherence — adherence_binomial","text":"Model adherence binomial probability time occasion.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_binomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binomial adherence — adherence_binomial","text":"","code":"adherence_binomial(n = 100, prob)"},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_binomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binomial adherence — adherence_binomial","text":"n number occasions prob binomial probability","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_binomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binomial adherence — adherence_binomial","text":"Returns vector length `n`   containing values 0 (non-adherent) 1 (adherent). Numeric vector length n","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_markov.html","id":null,"dir":"Reference","previous_headings":"","what":"Markov adherence model — adherence_markov","title":"Markov adherence model — adherence_markov","text":"Model adherence markov chain model, based probability staying adherent becoming adherent non-adherent. Assumes patients start adherent.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_markov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Markov adherence model — adherence_markov","text":"","code":"adherence_markov(n = 100, p11 = 0.9, p01 = 0.7)"},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_markov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Markov adherence model — adherence_markov","text":"n number occasions p11 probability staying adherent p01 probability going non-adherent adherent state","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/adherence_markov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Markov adherence model — adherence_markov","text":"Returns vector length `n`   containing values 0 (non-adherent) 1 (adherent). Numeric vector length n","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan.html","id":null,"dir":"Reference","previous_headings":"","what":"ADVAN-style functions to calculate linear PK systems — advan","title":"ADVAN-style functions to calculate linear PK systems — advan","text":"ADVAN-style functions calculate linear PK systems","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADVAN-style functions to calculate linear PK systems — advan","text":"","code":"advan(model, cpp = TRUE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/advan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ADVAN-style functions to calculate linear PK systems — advan","text":"model Standard linear PK model, e.g. `pk_1cmt_iv_bolus`. cpp use C++-versions model (~50x faster R implementations)","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ADVAN-style functions to calculate linear PK systems — advan","text":"Model function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_create_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ADVAN-style dataset — advan_create_data","title":"Create ADVAN-style dataset — advan_create_data","text":"Create ADVAN-style dataset","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_create_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ADVAN-style dataset — advan_create_data","text":"","code":"advan_create_data(   regimen,   parameters,   cmts = 5,   t_obs = NULL,   covariates = NULL,   covariate_model = NULL )"},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_create_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ADVAN-style dataset — advan_create_data","text":"regimen PKPDsim regimen parameters list parameters cmts number compartments, minimum 1. Default 5, enough linear PK models. OK compartments available actually used. t_obs add observation timepoints dataset covariates covariate list covariate_model covariate model equations, written C","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_create_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ADVAN-style dataset — advan_create_data","text":"Data frame ADVAN-style data","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_parse_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to parse the raw output from ADVAN-style functions — advan_parse_output","title":"Internal function to parse the raw output from ADVAN-style functions — advan_parse_output","text":"Internal function parse raw output ADVAN-style functions","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_parse_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to parse the raw output from ADVAN-style functions — advan_parse_output","text":"","code":"advan_parse_output(data, cmts = 1, t_obs, extra_t_obs = TRUE, regimen)"},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_parse_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to parse the raw output from ADVAN-style functions — advan_parse_output","text":"data simulation output data cmts number compartments t_obs observation times extra_t_obs leave extra added dose times dataset? regimen PKPDsim regimen","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_parse_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to parse the raw output from ADVAN-style functions — advan_parse_output","text":"Data frame containing parsed simulation data","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_process_infusion_doses.html","id":null,"dir":"Reference","previous_headings":"","what":"Add column RATEALL to ADVAN-style dataset to handle infusions — advan_process_infusion_doses","title":"Add column RATEALL to ADVAN-style dataset to handle infusions — advan_process_infusion_doses","text":"Function adapted code Abuhelwa, Foster, Upton JPET 2015. cleaned somewhat optimized. Can potentially optimized .","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_process_infusion_doses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add column RATEALL to ADVAN-style dataset to handle infusions — advan_process_infusion_doses","text":"","code":"advan_process_infusion_doses(data)"},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_process_infusion_doses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add column RATEALL to ADVAN-style dataset to handle infusions — advan_process_infusion_doses","text":"data ADVAN-style dataset, e.g. created using `advan_create_data`.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_process_infusion_doses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add column RATEALL to ADVAN-style dataset to handle infusions — advan_process_infusion_doses","text":"Data frame containing additional RATEALL column.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/advan_process_infusion_doses.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add column RATEALL to ADVAN-style dataset to handle infusions — advan_process_infusion_doses","text":"Abuhelwa, . Y., Foster, D. J. R., Upton, R. N. (2015)   ADVAN-style analytical solutions common pharmacokinetic models. J   Pharmacol Toxicol Methods 73:42-8. DOI: 10.1016/j.vascn.2015.03.004","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/analytical_eqn_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for using analytical equations with PKPD regimens — analytical_eqn_wrapper","title":"Wrapper for using analytical equations with PKPD regimens — analytical_eqn_wrapper","text":"development. Needs optimized significantly useful production.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/analytical_eqn_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for using analytical equations with PKPD regimens — analytical_eqn_wrapper","text":"","code":"analytical_eqn_wrapper(analytical, design = NULL, parameters)"},{"path":"https://insightrx.github.io/PKPDsim/reference/analytical_eqn_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for using analytical equations with PKPD regimens — analytical_eqn_wrapper","text":"analytical analytical equation, taking parameters `amt`, `parameters`, `t`, returning vector values `y` design design dataset created `sim_ode` parameters list parameters","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/apply_lagtime.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply lagtime to a regimen — apply_lagtime","title":"Apply lagtime to a regimen — apply_lagtime","text":"Apply lagtime regimen","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/apply_lagtime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply lagtime to a regimen — apply_lagtime","text":"","code":"apply_lagtime(regimen, lagtime, parameters, cmt_mapping = NULL)"},{"path":"https://insightrx.github.io/PKPDsim/reference/apply_lagtime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply lagtime to a regimen — apply_lagtime","text":"regimen PKPDsim regimen lagtime lagtime object, either single value / parameter name vector values/parameter names compartments. parameters parameter list, required parameters specified. cmt_mapping map administration types compartments, e.g. `list(\"oral\" = 1, \"infusion\" = 2, \"bolus\" = 2)`.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/apply_lagtime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply lagtime to a regimen — apply_lagtime","text":"Original regimen lagtime added dose times","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/bioavailability_to_R_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms bioavailability specs into appropriate R code — bioavailability_to_R_code","title":"Transforms bioavailability specs into appropriate R code — bioavailability_to_R_code","text":"Specialized wrapper around `vector_to_R_code` makes reasonable PK assumptions bioavailability specification NULL.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/bioavailability_to_R_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms bioavailability specs into appropriate R code — bioavailability_to_R_code","text":"","code":"bioavailability_to_R_code(bioav)"},{"path":"https://insightrx.github.io/PKPDsim/reference/bioavailability_to_R_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms bioavailability specs into appropriate R code — bioavailability_to_R_code","text":"bioav bioavailability specification, either NULL (assume value 1 compartments), single value (assume applies compartments), vector values.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/bioavailability_to_R_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms bioavailability specs into appropriate R code — bioavailability_to_R_code","text":"character string length 1","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_dydP.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate derivative — calc_dydP","title":"Calculate derivative — calc_dydP","text":"Calculate derivative","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_dydP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate derivative — calc_dydP","text":"","code":"calc_dydP(dy, y, rel_delta, log_y)"},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_dydP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate derivative — calc_dydP","text":"dy dy y dependent value rel_delta relative delta log_y logical indicating dependent variable log transformed","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_ss_analytic.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the state of a linear PK system at steady state (trough)\nusing analytics equations (so for linear PK systems only). — calc_ss_analytic","title":"Returns the state of a linear PK system at steady state (trough)\nusing analytics equations (so for linear PK systems only). — calc_ss_analytic","text":"Basically performs PK simulation using analytic equations instead ODEs steady state (n=45 days, increased needed).","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_ss_analytic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the state of a linear PK system at steady state (trough)\nusing analytics equations (so for linear PK systems only). — calc_ss_analytic","text":"","code":"calc_ss_analytic(   f = \"1cmt_oral\",   dose,   interval,   t_inf = NULL,   model,   parameters,   covariates = NULL,   map = NULL,   n_days = 45,   n_transit_compartments = 0,   auc = FALSE )"},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_ss_analytic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the state of a linear PK system at steady state (trough)\nusing analytics equations (so for linear PK systems only). — calc_ss_analytic","text":"f analytic equation use, must one `names(advan_funcs)` dose dose interval interval t_inf infusion time model PKPDsim model parameters parameters list covariates covariates list map list remapping parameters, ex: `list(CL = \"CL\", V = \"V\")` n_days number days assume steady state. Default 45. n_transit_compartments number transit compartments, insert n compartments first (dose) compartment second (central) compartment. auc add (empty) AUC compartment end state vector?","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_ss_analytic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the state of a linear PK system at steady state (trough)\nusing analytics equations (so for linear PK systems only). — calc_ss_analytic","text":"State vector linear pharmacokinetic system steady state","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calc_ss_analytic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns the state of a linear PK system at steady state (trough)\nusing analytics equations (so for linear PK systems only). — calc_ss_analytic","text":"can also used models transit compartments, however, assumption made end dosing interval amount transit compartments negligible (0).","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calculate_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate model-specific variables using a dummy call to sim_ode() — calculate_parameters","title":"Calculate model-specific variables using a dummy call to sim_ode() — calculate_parameters","text":"convenience function PKPDsim users, used inside `sim_ode()`` function way. function useful converting estimated parameter actual parameter, e.g. clearance specified `CLi = CL * (WT/70) * (1/CR)` can used calculate `CLi` without write function second time R.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calculate_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate model-specific variables using a dummy call to sim_ode() — calculate_parameters","text":"","code":"calculate_parameters(   ode = NULL,   parameters = NULL,   covariates = NULL,   include_parameters = TRUE,   include_variables = TRUE,   ... )"},{"path":"https://insightrx.github.io/PKPDsim/reference/calculate_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate model-specific variables using a dummy call to sim_ode() — calculate_parameters","text":"ode PKPDsim model object parameters parameter list covariates covariate list. Make sure include covariates right time point, since last observed covariate values used. include_parameters boolean, include parameters? include_variables boolean, include variables? ... arguments pass simulation function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/calculate_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate model-specific variables using a dummy call to sim_ode() — calculate_parameters","text":"List model-specific variables","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/check_iov_specification.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks that IOV was specified appropriately — check_iov_specification","title":"Checks that IOV was specified appropriately — check_iov_specification","text":"Inter-occasion variability (IOV) expected supplied list `cv` `n_bins` specified. `cv` expected named list IOV PK parameter. function checks ensure PK code ODE code contains IOV term PK parameter specified.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/check_iov_specification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks that IOV was specified appropriately — check_iov_specification","text":"","code":"check_iov_specification(iov, code, pk_code)"},{"path":"https://insightrx.github.io/PKPDsim/reference/check_iov_specification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks that IOV was specified appropriately — check_iov_specification","text":"iov IOV specifications, provided nested named list. code C++ ODE code, supplied string pk_code C++ PK code, supplied string","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/check_mixture_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that mixture model is specified in right format and within constraints (1 parameter, 2 groups) — check_mixture_model","title":"Check that mixture model is specified in right format and within constraints (1 parameter, 2 groups) — check_mixture_model","text":"Check mixture model specified right format within constraints (1 parameter, 2 groups)","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/check_mixture_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that mixture model is specified in right format and within constraints (1 parameter, 2 groups) — check_mixture_model","text":"","code":"check_mixture_model(mixture, parameters)"},{"path":"https://insightrx.github.io/PKPDsim/reference/check_mixture_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that mixture model is specified in right format and within constraints (1 parameter, 2 groups) — check_mixture_model","text":"mixture mixture model specification (list, e.g. `list(\"CL\" = list(values=c(5, 10), probability=0.3))`) parameters vector parameter names","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/check_obs_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks obs input for valid combinations of cmt, var, scale — check_obs_input","title":"Checks obs input for valid combinations of cmt, var, scale — check_obs_input","text":"Checks obs input valid combinations cmt, var, scale","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/check_obs_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks obs input for valid combinations of cmt, var, scale — check_obs_input","text":"","code":"check_obs_input(obs)"},{"path":"https://insightrx.github.io/PKPDsim/reference/check_obs_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks obs input for valid combinations of cmt, var, scale — check_obs_input","text":"obs specified observation object including least description variable(s) associated particular compartment, e.g. `list(variable=\"CONC\", scale=\"1\")`.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/compile_sim_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile ODE model to c++ function — compile_sim_cpp","title":"Compile ODE model to c++ function — compile_sim_cpp","text":"Compile ODE model c++ function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/compile_sim_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile ODE model to c++ function — compile_sim_cpp","text":"","code":"compile_sim_cpp(   code,   dose_code,   pk_code,   size,   p,   cpp_show_code,   code_init = NULL,   state_init = NULL,   declare_variables = NULL,   variables = NULL,   covariates = NULL,   obs = NULL,   dose = NULL,   iov = NULL,   compile = TRUE,   verbose = FALSE,   as_is = FALSE )"},{"path":"https://insightrx.github.io/PKPDsim/reference/compile_sim_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile ODE model to c++ function — compile_sim_cpp","text":"code C++ code ODE system dose_code C++ code per dose event pk_code C++ code per event (similar $PK) size size ODE system p parameters (list) cpp_show_code show output c++ function? code_init code initialization state state_init state init vector declare_variables variable declaration required variables (including user-specified) variables user-specified variables covariates covariates specification obs observation specification dose dose specification iov iov specification compile compile ? verbose show output as_is use C-code -, substitute line-endings shift indices","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/compile_sim_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile ODE model to c++ function — compile_sim_cpp","text":"List containing ODE definition C++ code simulation function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/covariate_last_obs_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Use only last observed covariate values — covariate_last_obs_only","title":"Use only last observed covariate values — covariate_last_obs_only","text":"Use last observed covariate values","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/covariate_last_obs_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use only last observed covariate values — covariate_last_obs_only","text":"","code":"covariate_last_obs_only(covariates)"},{"path":"https://insightrx.github.io/PKPDsim/reference/covariate_last_obs_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use only last observed covariate values — covariate_last_obs_only","text":"covariates covariates object","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/covariate_last_obs_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use only last observed covariate values — covariate_last_obs_only","text":"List containing elements input covariate object including last value covariate","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/covariates_table_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert covariate table specified as data.frame — covariates_table_to_list","title":"Convert covariate table specified as data.frame — covariates_table_to_list","text":"Can handle time-varying data , `t` `time` specified column","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/covariates_table_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert covariate table specified as data.frame — covariates_table_to_list","text":"","code":"covariates_table_to_list(covariates_table, covariates_implementation = list())"},{"path":"https://insightrx.github.io/PKPDsim/reference/covariates_table_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert covariate table specified as data.frame — covariates_table_to_list","text":"covariates_table `data.frame`` covariates columns. Potentially `id` `t` columns covariates_implementation `list` implementation method per covariate","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/covariates_table_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert covariate table specified as data.frame — covariates_table_to_list","text":"List covariates","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/create_event_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event table — create_event_table","title":"Create an event table — create_event_table","text":"Create event table","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/create_event_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event table — create_event_table","text":"","code":"create_event_table(   regimen,   t_max = NULL,   t_obs = NULL,   t_tte = NULL,   t_init = 0,   p,   covariates,   model = NULL,   obs_type = NULL )"},{"path":"https://insightrx.github.io/PKPDsim/reference/create_event_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event table — create_event_table","text":"regimen regimen t_max t_max t_obs t_obs t_tte t_tte t_init t_init p parameters covariates covariates model model obs_type observation type","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/create_obs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create obs data — create_obs_data","title":"Create obs data — create_obs_data","text":"Used sim() arrange data ode() function correct format.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/create_obs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create obs data — create_obs_data","text":"","code":"create_obs_data(ode_data, obs_attr, id)"},{"path":"https://insightrx.github.io/PKPDsim/reference/create_obs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create obs data — create_obs_data","text":"ode_data data frame output ode() function obs_attr \"obs\" attribute ode() function id ID individual","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/cv_to_omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Create lower-diagonal omega matrix from CV for parameter estimates — cv_to_omega","title":"Create lower-diagonal omega matrix from CV for parameter estimates — cv_to_omega","text":"Create lower-diagonal omega matrix CV parameter estimates","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/cv_to_omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create lower-diagonal omega matrix from CV for parameter estimates — cv_to_omega","text":"","code":"cv_to_omega(par_cv = NULL, parameters = NULL)"},{"path":"https://insightrx.github.io/PKPDsim/reference/cv_to_omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create lower-diagonal omega matrix from CV for parameter estimates — cv_to_omega","text":"par_cv list parameter CVs parameters list parameters","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/cv_to_omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create lower-diagonal omega matrix from CV for parameter estimates — cv_to_omega","text":"vector describing lower triangle omega (-subject variability) matrix","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/define_tdm_init_model.html","id":null,"dir":"Reference","previous_headings":"","what":"defines C code for TDM before dose conditions — define_tdm_init_model","title":"defines C code for TDM before dose conditions — define_tdm_init_model","text":"Currently available 1-cmt 2-cmt IV models","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/define_tdm_init_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"defines C code for TDM before dose conditions — define_tdm_init_model","text":"","code":"define_tdm_init_model(def)"},{"path":"https://insightrx.github.io/PKPDsim/reference/define_tdm_init_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"defines C code for TDM before dose conditions — define_tdm_init_model","text":"def model definition, named recursive list least objects `misc$model_type`, `parameters` `variables`","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/define_tdm_init_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"defines C code for TDM before dose conditions — define_tdm_init_model","text":"model defintion `state_init` object added describing initializing compartments.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/detect_ode_syntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-detect the syntax for the ODE code — detect_ode_syntax","title":"Auto-detect the syntax for the ODE code — detect_ode_syntax","text":"Either PKPDsim RxODE","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/detect_ode_syntax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-detect the syntax for the ODE code — detect_ode_syntax","text":"","code":"detect_ode_syntax(code)"},{"path":"https://insightrx.github.io/PKPDsim/reference/detect_ode_syntax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-detect the syntax for the ODE code — detect_ode_syntax","text":"code character string ODE code","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/detect_ode_syntax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-detect the syntax for the ODE code — detect_ode_syntax","text":"List elements indicating syntax ODE code","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/f_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"covariate function builder — f_cov","title":"covariate function builder — f_cov","text":"covariate function builder","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/f_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"covariate function builder — f_cov","text":"","code":"f_cov(...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/f_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"covariate function builder — f_cov","text":"... parameters pass cov","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/f_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"covariate function builder — f_cov","text":"Covariate function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_ode_model_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of states in the ODE from the code\ncode C++ code for model — get_ode_model_size","title":"Get the number of states in the ODE from the code\ncode C++ code for model — get_ode_model_size","text":"Get number states ODE code code C++ code model","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_ode_model_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of states in the ODE from the code\ncode C++ code for model — get_ode_model_size","text":"","code":"get_ode_model_size(code)"},{"path":"https://insightrx.github.io/PKPDsim/reference/get_ode_model_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of states in the ODE from the code\ncode C++ code for model — get_ode_model_size","text":"code C++ code","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_ode_model_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of states in the ODE from the code\ncode C++ code for model — get_ode_model_size","text":"Number states ODE model","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_parameters_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model parameters from code — get_parameters_from_code","title":"Get model parameters from code — get_parameters_from_code","text":"Get model parameters code","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_parameters_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model parameters from code — get_parameters_from_code","text":"","code":"get_parameters_from_code(code, state_init, declare_variables = NULL)"},{"path":"https://insightrx.github.io/PKPDsim/reference/get_parameters_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model parameters from code — get_parameters_from_code","text":"code code state_init state init vector declare_variables declared variables","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_parameters_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model parameters from code — get_parameters_from_code","text":"Vector parameter names","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_t_obs_from_regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract sensible default observation times from a specified regimen — get_t_obs_from_regimen","title":"Extract sensible default observation times from a specified regimen — get_t_obs_from_regimen","text":"Extract sensible default observation times specified regimen","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_t_obs_from_regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract sensible default observation times from a specified regimen — get_t_obs_from_regimen","text":"","code":"get_t_obs_from_regimen(   regimen = NULL,   obs_step_size = NULL,   t_max = NULL,   covariates = NULL,   extra_t_obs = NULL,   t_init = 0 )"},{"path":"https://insightrx.github.io/PKPDsim/reference/get_t_obs_from_regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract sensible default observation times from a specified regimen — get_t_obs_from_regimen","text":"regimen regimen created using `new_regimen()` obs_step_size step size observations. auto-calculated NULL t_max max time value covariates covariates object, created using `list(new_covariate(), ...)` extra_t_obs add timepoints t_obs covariate changing (`T`/`F`) t_init time initization ODE system. Usually 0.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_var_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get expected variance/sd/ci of dependent variable\nbased on PKPDsim model, parameters, and regimen — get_var_y","title":"Get expected variance/sd/ci of dependent variable\nbased on PKPDsim model, parameters, and regimen — get_var_y","text":"Get expected variance/sd/ci dependent variable based PKPDsim model, parameters, regimen","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_var_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get expected variance/sd/ci of dependent variable\nbased on PKPDsim model, parameters, and regimen — get_var_y","text":"","code":"get_var_y(   model = NULL,   parameters = list(),   regimen = list(),   t_obs = c(1:48),   obs_comp = NULL,   obs_variable = NULL,   omega = c(0.1, 0.05, 0.1),   omega_full = NULL,   n_ind = NULL,   ruv = NULL,   y = NULL,   rel_delta = 1e-04,   method = \"delta\",   sequence = NULL,   auc = FALSE,   sd = TRUE,   q = NULL,   in_parallel = FALSE,   n_cores = 3,   return_all = FALSE,   ... )"},{"path":"https://insightrx.github.io/PKPDsim/reference/get_var_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get expected variance/sd/ci of dependent variable\nbased on PKPDsim model, parameters, and regimen — get_var_y","text":"model model, created using `PKPDsim::new_ode_model()` parameters parameters list regimen regimen, created using `PKPDsim::new_regimen()` t_obs vector observation times obs_comp observation compartment. NULL \"obs\" (default) obs_variable observation variable. NULL, ignored, otherwise override `obs_comp`. omega triangle omega block omega_full full omega block n_ind number individuals simulate sim method ruv residual variability, supplied named list, ex: `list(prop = 0, add = 0, exp = 0)` y vector observations. NULL, new simulation performed. rel_delta rel_delta method method, `delta` `sim` sequence simulations, NULL pseudo-random sequence use, e.g. \"halton\" \"sobol\". See `mvrnorm2` details. auc AUC? sd return standard deviation (`TRUE`) variance (`FALSE`) q return vector quantiles instead sd/var. return parametric quantiles deltamethod used, non-parametric simulation-basesd methods. in_parallel run simulations parallel? n_cores run parallel, many cores? return_all return object relevant information? ... passed `sim_ode()`","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/get_var_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get expected variance/sd/ci of dependent variable\nbased on PKPDsim model, parameters, and regimen — get_var_y","text":"Vector standard deviations variances (quantiles thereof) dependent value   variable","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ifelse0.html","id":null,"dir":"Reference","previous_headings":"","what":"ifelse function but then based on whether value is NULL or not — ifelse0","title":"ifelse function but then based on whether value is NULL or not — ifelse0","text":"ifelse function based whether value NULL ","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ifelse0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ifelse function but then based on whether value is NULL or not — ifelse0","text":"","code":"ifelse0(value = NULL, alternative = NULL, allow_null = FALSE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/ifelse0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ifelse function but then based on whether value is NULL or not — ifelse0","text":"value metadata list object alternative alternative value allow_null can alternative NULL?","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/ifelse0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ifelse function but then based on whether value is NULL or not — ifelse0","text":"value non-NULL; alternative otherwise","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/is_newer_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if package number is different from currently installed,\nand provide some messaging. — is_newer_package","title":"Check if package number is different from currently installed,\nand provide some messaging. — is_newer_package","text":"Technically checks package version different, necessarily higher version number.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/is_newer_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if package number is different from currently installed,\nand provide some messaging. — is_newer_package","text":"","code":"is_newer_package(package, new_version)"},{"path":"https://insightrx.github.io/PKPDsim/reference/is_newer_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if package number is different from currently installed,\nand provide some messaging. — is_newer_package","text":"package R package new_version new version number","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/is_positive_definite.html","id":null,"dir":"Reference","previous_headings":"","what":"Is matrix positive definite — is_positive_definite","title":"Is matrix positive definite — is_positive_definite","text":"matrix positive definite","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/is_positive_definite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is matrix positive definite — is_positive_definite","text":"","code":"is_positive_definite(x)"},{"path":"https://insightrx.github.io/PKPDsim/reference/is_positive_definite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is matrix positive definite — is_positive_definite","text":"x matrix, specified either vector lower triangle, full matrix (matrix class)","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/is_positive_definite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is matrix positive definite — is_positive_definite","text":"TRUE x positive definite; FALSE otherwise.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/join_cov_and_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines covariates and parameters into a single list, useful for reparametrization of the model. — join_cov_and_par","title":"Combines covariates and parameters into a single list, useful for reparametrization of the model. — join_cov_and_par","text":"Combines covariates parameters single list, useful reparametrization model.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/join_cov_and_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines covariates and parameters into a single list, useful for reparametrization of the model. — join_cov_and_par","text":"","code":"join_cov_and_par(covs, pars)"},{"path":"https://insightrx.github.io/PKPDsim/reference/join_cov_and_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines covariates and parameters into a single list, useful for reparametrization of the model. — join_cov_and_par","text":"covs covariates object pars model parameters, output `parameters()` call frmo model library.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/join_cov_and_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines covariates and parameters into a single list, useful for reparametrization of the model. — join_cov_and_par","text":"List containing covariates parameters","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/join_regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Join two dosing regimens — join_regimen","title":"Join two dosing regimens — join_regimen","text":"Join two dosing regimens","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/join_regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join two dosing regimens — join_regimen","text":"","code":"join_regimen(   regimen1 = NULL,   regimen2 = NULL,   interval = NULL,   dose_update = NULL,   t_dose_update = NULL,   continuous = FALSE )"},{"path":"https://insightrx.github.io/PKPDsim/reference/join_regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join two dosing regimens — join_regimen","text":"regimen1 first regimen regimen2 second regimen interval interval regimen1 regimen2 (dose_update specified) dose_update dose number override regimen1 regimen 2 (interval specified) t_dose_update dose time update regimen continuous joining continuous infusions","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/join_regimen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join two dosing regimens — join_regimen","text":"Joined regimen","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/merge_regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge two regimens together. — merge_regimen","title":"Merge two regimens together. — merge_regimen","text":"contrast `join_regimen`, joins two consecutive regimens together, `merge_regimen` merges two regimens given time. can e.g. used define regimens multi-drug models.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/merge_regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge two regimens together. — merge_regimen","text":"","code":"merge_regimen(regimens)"},{"path":"https://insightrx.github.io/PKPDsim/reference/merge_regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge two regimens together. — merge_regimen","text":"regimens List PKPDsim regimens created `new_regimen`.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/merge_regimen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge two regimens together. — merge_regimen","text":"Merged regimens","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/model_from_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Load model definition from API, and compile to R library — model_from_api","title":"Load model definition from API, and compile to R library — model_from_api","text":"Load model definition API, compile R library","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/model_from_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load model definition from API, and compile to R library — model_from_api","text":"","code":"model_from_api(   url,   model = NULL,   nonmem = NULL,   verbose = TRUE,   get_definition = FALSE,   to_package = FALSE,   force = FALSE,   install_all = FALSE,   ... )"},{"path":"https://insightrx.github.io/PKPDsim/reference/model_from_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load model definition from API, and compile to R library — model_from_api","text":"url URL file path JSON representation model model model id (used messages) nonmem URL file path NONMEM file verbose verbosity (T/F) get_definition return model definition, compile to_package compile package? force force install even version number model already installed. install_all force install , even model inactive ... arguments passed new_ode_model() function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/model_from_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load model definition from API, and compile to R library — model_from_api","text":"Model object created new_ode_model()","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/model_library.html","id":null,"dir":"Reference","previous_headings":"","what":"Model library — model_library","title":"Model library — model_library","text":"Model library","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/model_library.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model library — model_library","text":"","code":"model_library(name = NULL)"},{"path":"https://insightrx.github.io/PKPDsim/reference/model_library.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model library — model_library","text":"name name model library. none specified, show list available models.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/model_library.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model library — model_library","text":"List containing information named model","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/mvrnorm2.html","id":null,"dir":"Reference","previous_headings":"","what":"More powerful multivariate normal sampling function — mvrnorm2","title":"More powerful multivariate normal sampling function — mvrnorm2","text":"Besides standard multivariate normal sampling (mvrnorm), allows exponential multivarate normal quasi-random multivariate normal (using randtoolbox) using interface.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/mvrnorm2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"More powerful multivariate normal sampling function — mvrnorm2","text":"","code":"mvrnorm2(n, mu, Sigma, exponential = FALSE, sequence = NULL, ...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/mvrnorm2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"More powerful multivariate normal sampling function — mvrnorm2","text":"n number samples mu mean Sigma covariance matrix exponential exponential distribution (.e. multiply mu exponential sampled numbers) sequence sequence available randtoolbox, e.g. `halton`, `sobol` ... parameters passed mvrnorm randtoolbox sequence generator","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/mvrnorm2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"More powerful multivariate normal sampling function — mvrnorm2","text":"Multivariate normal samples","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/na_locf.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill in NAs with the previous non-missing value — na_locf","title":"Fill in NAs with the previous non-missing value — na_locf","text":"Inspired zoo::na.locf0","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/na_locf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill in NAs with the previous non-missing value — na_locf","text":"","code":"na_locf(object, fromLast = FALSE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/na_locf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill in NAs with the previous non-missing value — na_locf","text":"object object fromLast logical. Causes observations carried backward rather forward. Default FALSE.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/na_locf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill in NAs with the previous non-missing value — na_locf","text":"Original object NAs filled ","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_adherence.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilistically model adherence — new_adherence","title":"Probabilistically model adherence — new_adherence","text":"Model drug adherence using either binomial probability distribution markov chain model based probability staying adherent becoming adherent non-adherent.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_adherence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilistically model adherence — new_adherence","text":"","code":"new_adherence(   n = 100,   type = c(\"markov\", \"binomial\"),   p_markov_remain_ad = 0.75,   p_markov_become_ad = 0.75,   p_binom = 0.7 )"},{"path":"https://insightrx.github.io/PKPDsim/reference/new_adherence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilistically model adherence — new_adherence","text":"n number occasions simulate type type adherence simulation, either \"markov\" \"binomial\" p_markov_remain_ad markov probability staying adherent p_markov_become_ad markov probability going non-adherent adherent state p_binom binomial probability adherent","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_adherence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilistically model adherence — new_adherence","text":"Returns vector length `n`   containing values 0 (non-adherent) 1 (adherent). Numeric vector length n","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"New covariate — new_covariate","title":"New covariate — new_covariate","text":"Describe data covariate, either fixed time-variant","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New covariate — new_covariate","text":"","code":"new_covariate(   value = NULL,   times = NULL,   implementation = \"interpolate\",   unit = NULL,   interpolation_join_limit = 1,   remove_negative_times = TRUE,   round_times = NULL,   comments = NULL,   verbose = TRUE )"},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New covariate — new_covariate","text":"value numeric vector times NULL time-invariant covariate numeric vector specifying update times covariate implementation time-varying covariates either 'LOCF' (last observation carried forward) 'interpolate' (default) unit specify covariate unit (optional, documentation purposes ) interpolation_join_limit interpolate option, covariate timepoints spaced close together, ODE solver sometimes chokes. argument sets lower limit space timepoints. create average values joint timepoints instead. undesired set NULL 0. remove_negative_times TRUE`` FALSE` round_times round times specified number digits. NULL, round. comments NULL, vector length equal value specifying comments observation verbose verbosity","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New covariate — new_covariate","text":"Object class \"covariate\"","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate_model.html","id":null,"dir":"Reference","previous_headings":"","what":"covariate model function — new_covariate_model","title":"covariate model function — new_covariate_model","text":"covariate model function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"covariate model function — new_covariate_model","text":"","code":"new_covariate_model(model = list())"},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"covariate model function — new_covariate_model","text":"model covariate model specified list","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_covariate_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"covariate model function — new_covariate_model","text":"List containing model function(s)","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_ode_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new ODE model — new_ode_model","title":"Create new ODE model — new_ode_model","text":"Create new ODE model","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_ode_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new ODE model — new_ode_model","text":"","code":"new_ode_model(   model = NULL,   code = NULL,   pk_code = NULL,   dose_code = NULL,   file = NULL,   func = NULL,   state_init = NULL,   parameters = NULL,   reparametrization = NULL,   mixture = NULL,   units = NULL,   size = NULL,   lagtime = NULL,   obs = list(cmt = 1, scale = 1),   dose = list(cmt = 1),   covariates = NULL,   declare_variables = NULL,   iiv = NULL,   iov = NULL,   omega_matrix = NULL,   ruv = NULL,   ltbs = NULL,   misc = NULL,   cmt_mapping = NULL,   int_step_size = NULL,   default_parameters = NULL,   fixed = NULL,   cpp_show_code = FALSE,   package = NULL,   test_file = NULL,   install = TRUE,   folder = NULL,   lib_location = NULL,   verbose = FALSE,   as_is = FALSE,   nonmem = NULL,   comments = NULL,   version = \"0.1.0\",   quiet = \"\" )"},{"path":"https://insightrx.github.io/PKPDsim/reference/new_ode_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new ODE model — new_ode_model","text":"model model name model library code C++ code specifying ODE system pk_code C++ code called event dose_code C++ code called dose event file file containing C++ code func R function used deSolve library state_init vector state init parameters list vector parameter values reparametrization list parameters definitions reparametrize linear PK model 1-, 2- o4 3-compartment PK standardized parametrization. mixture mixture models, provide list parameter associated mixture possible values probabilities (first value), e.g. `list(CL = list(value = c(10, 20), probability = 0.3)`. units list vector parameter units size size state vector model. Size extracted automatically supplied code, use argument override. lagtime lag time obs list \"scale\": character string definition scale, e.g. \"V\" \"V*(WT/70)\". NULL, scale defaults 1., \"cmt\" observation compartment dose specify default dose compartment, e.g. list(cmt = 1) covariates specify covariates, either character vector list. specified list, allows use timevarying covariates (see `new_covariate()` function info) declare_variables declare variables iiv inter-individual variability, can optionally added library iov inter-occasion variability, can optionally added library omega_matrix variance-covariance matrix inter-individual variability, can optionally added library ruv residual variability, can optionally added library ltbs log-transform sides. used simulations, fitting (sets attribute `ltbs`). misc list miscellaneous model metadata cmt_mapping list indicating administration routes apply compartments. Example: `list(\"oral\" = 1, \"infusion\" = 2)` int_step_size step size integrator. Can pre-specified model, override default `sim_ode()` default_parameters population specific patient values, can optionally added library fixed parameters iiv added. cpp_show_code show generated C++ code package package name saving package test_file optional test file included package install install package compilation? folder base folder name create package lib_location install folder (`--library` argument) verbose show output as_is use C-code -, substitute line-endings shift indices nonmem add nonmem code attribute model object comments comments model version number library quiet passed `system2` setting stderr stdout; output cmd line output. Default (`\"\"`) R console, NULL FALSE discards. TRUE captures output saves file.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_ode_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new ODE model — new_ode_model","text":"package name NULL, returns model object. Otherwise   return value.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose regimen for sim_ode — new_regimen","title":"Dose regimen for sim_ode — new_regimen","text":"Create dosing regimen use sim_ode","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose regimen for sim_ode — new_regimen","text":"","code":"new_regimen(   amt = 100,   interval = NULL,   n = 3,   times = NULL,   type = NULL,   t_inf = NULL,   rate = NULL,   t_lag = NULL,   cmt = NULL,   checks = TRUE,   ss = FALSE,   n_ss = NULL,   first_dose_time = now_utc() )"},{"path":"https://insightrx.github.io/PKPDsim/reference/new_regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dose regimen for sim_ode — new_regimen","text":"amt dosing amount, either single value (repeated multiple doses), vector doses administration interval dosing interval (requires n argument) n number doses (requires interval argument) times vector describing dosing times. Overrides specified times using interval n arguments type either \"infusion\", \"bolus\", \"oral\", \"sc\" (subcutaneous), \"im\" (intramuscular). t_inf infusion time (`type`==`infusion`) rate infusion rate (`type`==`infusion`). `NULL` default. specified, overrides `t_inf` t_lag lag time (can applied dose type, oral). just added `times` cmt vector dosing compartments (optional, NULL dosing compartment defined model used) checks input checks. Remove increase speed (e.g. population-level estimation optimal design) ss steady state? boolean value whether simulate steady state first (steady state based specified `amt` `interval`, `times` ignored). n_ss many doses simulate assumed steady state. Default 4 * 24 / `interval`. first_dose_time datetime stamp first dose (class `POSIXct`). Default current date time.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/new_regimen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dose regimen for sim_ode — new_regimen","text":"list containing calculated VPC information, ggplot2 object","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/new_regimen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dose regimen for sim_ode — new_regimen","text":"","code":"r1 <- new_regimen(amt=50, interval=12, n=20) # dose 50mg, q12hrs for 10 days r2 <- new_regimen(amt=50, times=c(0:19)*12)  # same, but using explicit times r3 <- new_regimen(amt=c(rep(100,4), rep(50,16)), times=c(0:19)*12)  # first 4 doses higher dose"},{"path":"https://insightrx.github.io/PKPDsim/reference/nlmixr_parse_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to parse parameters for a model into a structure used by nlmixr — nlmixr_parse_parameters","title":"Function to parse parameters for a model into a structure used by nlmixr — nlmixr_parse_parameters","text":"Function parse parameters model structure used nlmixr","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/nlmixr_parse_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to parse parameters for a model into a structure used by nlmixr — nlmixr_parse_parameters","text":"","code":"nlmixr_parse_parameters(   parameters = list(CL = 5, V = 50),   omega = c(0.1, 0.05, 0.1),   res_var = list(prop = 0.1, add = 1),   fixed = c(),   log_transform = TRUE,   ... )"},{"path":"https://insightrx.github.io/PKPDsim/reference/nlmixr_parse_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to parse parameters for a model into a structure used by nlmixr — nlmixr_parse_parameters","text":"parameters list parameters omega vector describing lower-diagonal -subject variability matrix res_var residual variability. Expected list arguments `prop`, `add`, /`exp`. NULL default. fixed vector fixed parameters log_transform log-transform estimated parameters nlmixr? ... passed ","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/nlmixr_parse_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to parse parameters for a model into a structure used by nlmixr — nlmixr_parse_parameters","text":"List parameters can used nlmixr","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/nm_to_regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regimen from NONMEM data — nm_to_regimen","title":"Create a regimen from NONMEM data — nm_to_regimen","text":"Create regimen based NONMEM, NONMEM-like dataset","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/nm_to_regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regimen from NONMEM data — nm_to_regimen","text":"","code":"nm_to_regimen(data, reset_time = TRUE, first_only = FALSE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/nm_to_regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regimen from NONMEM data — nm_to_regimen","text":"data NONMEM-type dataset reset_time start time simulated patient 0, irrespective design dataset first_only use design first individual dataset","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/nm_to_regimen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regimen from NONMEM data — nm_to_regimen","text":"Regimen object","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/now_utc.html","id":null,"dir":"Reference","previous_headings":"","what":"Current time in UTC — now_utc","title":"Current time in UTC — now_utc","text":"Current time UTC","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/now_utc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current time in UTC — now_utc","text":"","code":"now_utc()"},{"path":"https://insightrx.github.io/PKPDsim/reference/now_utc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current time in UTC — now_utc","text":"POSIXct object containing current time UTC","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/parse_obs_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse observation types to simulation code — parse_obs_types","title":"Parse observation types to simulation code — parse_obs_types","text":"Parse observation types simulation code","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/parse_obs_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse observation types to simulation code — parse_obs_types","text":"","code":"parse_obs_types(obs)"},{"path":"https://insightrx.github.io/PKPDsim/reference/parse_obs_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse observation types to simulation code — parse_obs_types","text":"obs specified observation object including least description variable(s) associated particular compartment, e.g. `list(variable=\"CONC\", scale=\"1\")`.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pkdata.html","id":null,"dir":"Reference","previous_headings":"","what":"PK dataset — pkdata","title":"PK dataset — pkdata","text":"Example PK dataset","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pkdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PK dataset — pkdata","text":"","code":"pkdata"},{"path":"https://insightrx.github.io/PKPDsim/reference/pkdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PK dataset — pkdata","text":"data frame 624 rows 12 variables NONMEM format","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pkpdsim_to_nlmixr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a model generated with PKPDsim to an object for nlmixr — pkpdsim_to_nlmixr","title":"Convert a model generated with PKPDsim to an object for nlmixr — pkpdsim_to_nlmixr","text":"Convert model generated PKPDsim object nlmixr","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pkpdsim_to_nlmixr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a model generated with PKPDsim to an object for nlmixr — pkpdsim_to_nlmixr","text":"","code":"pkpdsim_to_nlmixr(   model = NULL,   parameters = NULL,   omega = NULL,   res_var = NULL,   fixed = c(),   ini_code = NULL,   model_code = NULL,   model_par_code = NULL,   verbose = FALSE,   ... )"},{"path":"https://insightrx.github.io/PKPDsim/reference/pkpdsim_to_nlmixr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a model generated with PKPDsim to an object for nlmixr — pkpdsim_to_nlmixr","text":"model PKPDsim model parameters list parameters omega vector describing lower-diagonal -subject variability matrix res_var residual variability. Expected list arguments `prop`, `add`, /`exp`. NULL default. fixed vector fixed (estimated) parameter names ini_code manually specify `ini` block nlmixr model_code manually specify `model` block nlmixr model_par_code manually specify parameters section inside `model` block nlmixr verbose verbose, `TRUE` `FALSE` ... passed ","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pkpdsim_to_nlmixr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a model generated with PKPDsim to an object for nlmixr — pkpdsim_to_nlmixr","text":"nlmixr function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pop_regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove n doses (from tail) of PKPDsim regimen — pop_regimen","title":"Remove n doses (from tail) of PKPDsim regimen — pop_regimen","text":"Opposite shift_regimen()","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pop_regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove n doses (from tail) of PKPDsim regimen — pop_regimen","text":"","code":"pop_regimen(regimen, n = 1)"},{"path":"https://insightrx.github.io/PKPDsim/reference/pop_regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove n doses (from tail) of PKPDsim regimen — pop_regimen","text":"regimen PKPDsim regimen created using `new_regimen()` n number doses pop regimen","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/pop_regimen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove n doses (from tail) of PKPDsim regimen — pop_regimen","text":"Input regiment minus selected number doses","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/print.PKPDsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for PKPDsim simulation function — print.PKPDsim","title":"Print function for PKPDsim simulation function — print.PKPDsim","text":"Print function PKPDsim simulation function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.PKPDsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for PKPDsim simulation function — print.PKPDsim","text":"","code":"# S3 method for PKPDsim print(x, ...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/print.PKPDsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for PKPDsim simulation function — print.PKPDsim","text":"x function ... additional arguments","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.PKPDsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function for PKPDsim simulation function — print.PKPDsim","text":"return value, print function.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for PKPDsim covariate object — print.covariate","title":"Print function for PKPDsim covariate object — print.covariate","text":"Print function PKPDsim covariate object","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for PKPDsim covariate object — print.covariate","text":"","code":"# S3 method for covariate print(x, ...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/print.covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for PKPDsim covariate object — print.covariate","text":"x covariate object ... additional arguments","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function for PKPDsim covariate object — print.covariate","text":"return value, print function.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for PKPDsim regimen — print.regimen","title":"Print function for PKPDsim regimen — print.regimen","text":"Print function PKPDsim regimen","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for PKPDsim regimen — print.regimen","text":"","code":"# S3 method for regimen print(x, ...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/print.regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for PKPDsim regimen — print.regimen","text":"x regimen ... arguments pass","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print.regimen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function for PKPDsim regimen — print.regimen","text":"return value, print function.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a list in R syntax — print_list","title":"Return a list in R syntax — print_list","text":"Return list R syntax","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a list in R syntax — print_list","text":"","code":"print_list(x, wrapper = TRUE, quote = FALSE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/print_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a list in R syntax — print_list","text":"x list printed wrapper wrap list object? quote add quotes values list definition?","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/print_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a list in R syntax — print_list","text":"Original list R syntax","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/read_model_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read model definition from JSON — read_model_json","title":"Read model definition from JSON — read_model_json","text":"substitution escaped characters strings JSON file, converts list jsonlite::fromJSON()","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/read_model_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read model definition from JSON — read_model_json","text":"","code":"read_model_json(path)"},{"path":"https://insightrx.github.io/PKPDsim/reference/read_model_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read model definition from JSON — read_model_json","text":"path Path JSON file","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/read_model_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read model definition from JSON — read_model_json","text":"List containing contents original JSON file","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/regimen_to_nm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert PKPDsim regimen to NONMEM table (doses only) — regimen_to_nm","title":"Convert PKPDsim regimen to NONMEM table (doses only) — regimen_to_nm","text":"Convert PKPDsim regimen NONMEM table (doses )","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/regimen_to_nm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert PKPDsim regimen to NONMEM table (doses only) — regimen_to_nm","text":"","code":"regimen_to_nm(reg = NULL, dose_cmt = 1, n_ind = 1, t_obs = NULL, obs_cmt = 1)"},{"path":"https://insightrx.github.io/PKPDsim/reference/regimen_to_nm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert PKPDsim regimen to NONMEM table (doses only) — regimen_to_nm","text":"reg `PKPDsim` regimen, created using `new_regimen()` function dose_cmt dosing compartment, specified `reg` object n_ind repeat `n_ind` subjects t_obs add observation time(s) obs_cmt observation compartment added observation time(s)","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/regimen_to_nm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert PKPDsim regimen to NONMEM table (doses only) — regimen_to_nm","text":"Data frame containing doses","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/reparametrize.html","id":null,"dir":"Reference","previous_headings":"","what":"Reparametrize model parameters using a reparametrization defined within the model. — reparametrize","title":"Reparametrize model parameters using a reparametrization defined within the model. — reparametrize","text":"Mostly useful reparametrizing models standard parametrizations, e.g. NONMEM TRANS clinPK parametrizations.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/reparametrize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reparametrize model parameters using a reparametrization defined within the model. — reparametrize","text":"","code":"reparametrize(model, parameters, covariates)"},{"path":"https://insightrx.github.io/PKPDsim/reference/reparametrize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reparametrize model parameters using a reparametrization defined within the model. — reparametrize","text":"model PKPDsim model, compiled using `reparametrization` argument metadata object. parameters list model parameters covariates covariates list, specified PKPDsim covariates","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/reparametrize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reparametrize model parameters using a reparametrization defined within the model. — reparametrize","text":"Reparameterized model parameters","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/search_replace_in_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Find string and replace in file — search_replace_in_file","title":"Find string and replace in file — search_replace_in_file","text":"Find string replace file","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/search_replace_in_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find string and replace in file — search_replace_in_file","text":"","code":"search_replace_in_file(files = c(), find = NULL, replacement = NULL)"},{"path":"https://insightrx.github.io/PKPDsim/reference/search_replace_in_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find string and replace in file — search_replace_in_file","text":"files vector files find find string, vector character replacement replace , vector character, equal lenght `find`","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/search_replace_in_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find string and replace in file — search_replace_in_file","text":"Function return value edits files disk","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/shift_regimen.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove n doses (from start) of PKPDsim regimen — shift_regimen","title":"Remove n doses (from start) of PKPDsim regimen — shift_regimen","text":"Opposite pop_regimen()","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/shift_regimen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove n doses (from start) of PKPDsim regimen — shift_regimen","text":"","code":"shift_regimen(regimen, n = 1, reset_time = TRUE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/shift_regimen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove n doses (from start) of PKPDsim regimen — shift_regimen","text":"regimen PKPDsim regimen created using `new_regimen()` n number doses shift regimen reset_time reset remaining doses start t=0?","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/shift_regimen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove n doses (from start) of PKPDsim regimen — shift_regimen","text":"Regimen selected number doses removed start","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/shift_state_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"R starts counting vector indices at 1, c++ starts at 0,\nso reduce all state numbers in the Cpp function definition by 1 — shift_state_indices","title":"R starts counting vector indices at 1, c++ starts at 0,\nso reduce all state numbers in the Cpp function definition by 1 — shift_state_indices","text":"R starts counting vector indices 1, c++ starts 0, reduce state numbers Cpp function definition 1","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/shift_state_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R starts counting vector indices at 1, c++ starts at 0,\nso reduce all state numbers in the Cpp function definition by 1 — shift_state_indices","text":"","code":"shift_state_indices(ode_def, n = -1)"},{"path":"https://insightrx.github.io/PKPDsim/reference/shift_state_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R starts counting vector indices at 1, c++ starts at 0,\nso reduce all state numbers in the Cpp function definition by 1 — shift_state_indices","text":"ode_def ODE definition n add/substract number, default = -1","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate ODE or analytical equation — sim","title":"Simulate ODE or analytical equation — sim","text":"Simulates specified regimen using ODE system analytical equation","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate ODE or analytical equation — sim","text":"","code":"sim(   ode = NULL,   analytical = NULL,   parameters = NULL,   parameters_table = NULL,   mixture_group = NULL,   omega = NULL,   omega_type = \"exponential\",   res_var = NULL,   iov_bins = NULL,   seed = NULL,   sequence = NULL,   n_ind = 1,   event_table = NULL,   regimen = NULL,   lagtime = NULL,   covariates = NULL,   covariates_table = NULL,   covariates_implementation = list(),   covariate_model = NULL,   A_init = NULL,   only_obs = FALSE,   obs_step_size = NULL,   int_step_size = 0.01,   t_max = NULL,   t_obs = NULL,   t_tte = NULL,   t_init = 0,   obs_type = NULL,   duplicate_t_obs = FALSE,   extra_t_obs = TRUE,   rtte = FALSE,   checks = TRUE,   verbose = FALSE,   return_event_table = FALSE,   return_design = FALSE,   output_include = list(parameters = FALSE, covariates = FALSE),   ... )"},{"path":"https://insightrx.github.io/PKPDsim/reference/sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate ODE or analytical equation — sim","text":"ode function describing ODE system analytical string specifying analytical equation model use (similar ADVAN1-5 NONMEM). specified, use ODEs. parameters model parameters parameters_table dataframe parameters (parameters columns) containing parameter estimates individuals simulate. Formats accepted: data.frame, data.table, list lists. mixture_group mixture group models containing mixtures. either `1` `2`, since two groups currently allowed. omega vector describing lower-diagonal -subject variability matrix omega_type exponential normal, specified vector res_var residual variability. Expected list arguments `prop`, `add`, /`exp`. NULL default. iov_bins allow override default IOV bins model. Specified vector timepoints specifying bin separators, e.g. `iov_bins = c(0, 24, 48, 72, 9999)`. seed set seed reproducible results sequence NULL specifies pseudo-random sequence use, e.g. \"halton\" \"sobol\". See `mvrnorm2` details. n_ind number individuals simulate event_table use previously created `design` object used ODE simulation instead calling create_event_table() create new one. Especially useful repeated calling sim(), optimizations optimal design analysis. Also see `sim_core()` even faster simulations using precalculated `design` objects. regimen regimen object created using regimen() function lagtime either value (numeric) parameter (character) NULL. covariates list covariates (single individual) created using `new_covariate()` function covariates_table data.frame (unnamed list named lists per individual) covariate values covariates_implementation used `covariates_table`, named list covariate implementation methods per covariate, e.g. `list(WT = \"interpolate\", BIN = \"locf\")` covariate_model R code used pre-calculate effective parameters use ADVAN-style analytical equations. used ODE simulations. A_init vector initial state ODE system only_obs return observations obs_step_size step size observations int_step_size step size numerical integrator t_max maximum simulation time, specified pick end regimen maximum t_obs vector observation times, output values (used t_obs==NULL) t_tte vector observation times time--event simulation t_init initialization time first dose, default 0. obs_type vector observation types. valid combination equal length vector `t_obs`. duplicate_t_obs allow duplicate t_obs output? E.g. optimal design calculations t_obs = c(0,1,2,2,3). Default FALSE. extra_t_obs include extra t_obs output bolus doses? activated `t_obs` specified manually. E.g. bolus dose t=24, FALSE, PKPDsim output trough, bolus doses might want switch setting TRUE. set \"auto\" (default), TRUE default, switch FALSE whenever `t_obs` specified manually. rtte repeated events allowed (FALSE default) checks perform input checks? Default TRUE. calculations sim_ode invoked many times (e.g. population estimation, optimal design) makes sense switch FALSE (confirming input correct) improve speed. verbose show output return_event_table return event table simulation , run actual simulation. Useful iterative use sim(). return_design returns design (event table several details) simulation, run actual simulation. Useful iterative functions like estimation combination `sim_core()`, e.g. estimation optimal design. output_include list specyfing include output table, keys `parameters` `covariates`. FALSE default. ... extra parameters","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate ODE or analytical equation — sim","text":"data frame compartments associated concentrations requested times Simulated regimen","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate ODE or analytical equation — sim","text":"","code":"# \\donttest{ p <- list(   CL = 38.48,   V  = 7.4,   Q  = 7.844,   V2 = 5.19,   Q2  = 9.324,   V3 = 111 )  omega <- c(0.3,       # IIV CL            0.1, 0.3)  # IIV V  r1 <- new_regimen(   amt = 100,   times = c(0, 24, 36),   type = \"infusion\" )  mod <- new_ode_model(\"pk_3cmt_iv\") dat <- sim(   ode = mod,   parameters = p,   omega = omega,   n_ind = 20,   regimen = r1 ) # }"},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Only core function of the simulation function, always just returns observations.\nMostly useful for estimations / optimal design. Has no checks (for speed)! — sim_core","title":"Only core function of the simulation function, always just returns observations.\nMostly useful for estimations / optimal design. Has no checks (for speed)! — sim_core","text":"core function simulation function, always just returns observations. Mostly useful estimations / optimal design. checks (speed)!","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Only core function of the simulation function, always just returns observations.\nMostly useful for estimations / optimal design. Has no checks (for speed)! — sim_core","text":"","code":"sim_core(sim_object = NULL, ode, duplicate_t_obs = FALSE, t_init = 0)"},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Only core function of the simulation function, always just returns observations.\nMostly useful for estimations / optimal design. Has no checks (for speed)! — sim_core","text":"sim_object list design simulation parameters ode ode duplicate_t_obs allow duplicate t_obs output? E.g. optimal design calculations t_obs = c(0,1,2,2,3). Default FALSE. t_init time initization ODE system. Usually 0.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Only core function of the simulation function, always just returns observations.\nMostly useful for estimations / optimal design. Has no checks (for speed)! — sim_core","text":"Data frame simulation results","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function, renamed to sim() — sim_ode","title":"Deprecated function, renamed to sim() — sim_ode","text":"Deprecated function, renamed sim()","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated function, renamed to sim() — sim_ode","text":"","code":"sim_ode(...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated function, renamed to sim() — sim_ode","text":"... parameters passed sim() function","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated function, renamed to sim() — sim_ode","text":"Output sim()","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate ODE and create a Shiny app — sim_ode_shiny","title":"Simulate ODE and create a Shiny app — sim_ode_shiny","text":"function deprecated moved separate package https://github.com/ronkeizer/PKPDsimshiny.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate ODE and create a Shiny app — sim_ode_shiny","text":"","code":"sim_ode_shiny(...)"},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate ODE and create a Shiny app — sim_ode_shiny","text":"... arguments passed PKPDsimShiny::sim_ode_shiny()","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/sim_ode_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate ODE and create a Shiny app — sim_ode_shiny","text":"return value","code":""},{"path":[]},{"path":"https://insightrx.github.io/PKPDsim/reference/table_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a table to a list — table_to_list","title":"Convert a table to a list — table_to_list","text":"Convert table list","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/table_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a table to a list — table_to_list","text":"","code":"table_to_list(table)"},{"path":"https://insightrx.github.io/PKPDsim/reference/table_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a table to a list — table_to_list","text":"table data.frame","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/table_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a table to a list — table_to_list","text":"List containing original table contents","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/test_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Test a model — test_model","title":"Test a model — test_model","text":"Test model","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/test_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test a model — test_model","text":"","code":"test_model(url, test_file, package, force = FALSE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/test_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test a model — test_model","text":"url URL file path JSON representation model test_file Path .R file containing tests run package Package name force Run tests even model flagged building? Defaults FALSE","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/test_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test a model — test_model","text":"Runs test file model return value","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/test_pointer.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if model still in memory — test_pointer","title":"Test if model still in memory — test_pointer","text":"Test model still memory","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/test_pointer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if model still in memory — test_pointer","text":"","code":"test_pointer(model)"},{"path":"https://insightrx.github.io/PKPDsim/reference/test_pointer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if model still in memory — test_pointer","text":"model pointer model","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/test_pointer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if model still in memory — test_pointer","text":"return value","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/translate_ode.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a model from/to various PKPD simulators — translate_ode","title":"Translate a model from/to various PKPD simulators — translate_ode","text":"Currently supports PKDPsim <--> RxODE","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/translate_ode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a model from/to various PKPD simulators — translate_ode","text":"","code":"translate_ode(code, auto = TRUE, from = NULL, to = NULL, verbose = TRUE)"},{"path":"https://insightrx.github.io/PKPDsim/reference/translate_ode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a model from/to various PKPD simulators — translate_ode","text":"code character string ODE code auto auto-detect syntax (``) syntax syntax verbose verbose, `TRUE` `FALSE`","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/translate_ode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a model from/to various PKPD simulators — translate_ode","text":"Translated PKPDsim RxODE model","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/triangle_to_full.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert triangle omega matrix to full omega matrix — triangle_to_full","title":"Convert triangle omega matrix to full omega matrix — triangle_to_full","text":"Convert triangle omega matrix full omega matrix","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/triangle_to_full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert triangle omega matrix to full omega matrix — triangle_to_full","text":"","code":"triangle_to_full(vect)"},{"path":"https://insightrx.github.io/PKPDsim/reference/triangle_to_full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert triangle omega matrix to full omega matrix — triangle_to_full","text":"vect vector specifying triangle omega matrix","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/triangle_to_full.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert triangle omega matrix to full omega matrix — triangle_to_full","text":"Omega matrix","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/vector_to_R_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a vector into a string that evaluates to the same vector — vector_to_R_code","title":"Transform a vector into a string that evaluates to the same vector — vector_to_R_code","text":"Collapses vector comma-separated list strings quoted (special characters escaped). general purpose helper function writing new model code.","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/vector_to_R_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a vector into a string that evaluates to the same vector — vector_to_R_code","text":"","code":"vector_to_R_code(vec)"},{"path":"https://insightrx.github.io/PKPDsim/reference/vector_to_R_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a vector into a string that evaluates to the same vector — vector_to_R_code","text":"vec vector","code":""},{"path":"https://insightrx.github.io/PKPDsim/reference/vector_to_R_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a vector into a string that evaluates to the same vector — vector_to_R_code","text":"character string length 1","code":""},{"path":"https://insightrx.github.io/PKPDsim/news/index.html","id":"pkpdsim-111","dir":"Changelog","previous_headings":"","what":"PKPDsim 1.1.1","title":"PKPDsim 1.1.1","text":"CRAN release: 2022-04-01 first version PKPDsim released CRAN. Previous versions made available Github (InsightRX/PKPDsim).","code":""}]
