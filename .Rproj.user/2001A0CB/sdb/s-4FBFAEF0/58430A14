{
    "contents" : "# Description\n\nA library to perform simulations from a PKPD model, defined using a system of ODEs, model parameter estimates, a dosing regimen, and optionally a between-subject variability matrix. The library also provides a model exploration tool that dynamically generates a Shiny app from the specified model and parameters.\n\n## Rationale\n\nIn pharmacometrics, many models are defined as systems of ordinary differential equations (ODEs). Although solving ODEs numerically in R is relatively straightforward using the deSolve library, the implementation of e.g. infusions and complex dosing regimens as well as the simulation of patient populations with multi-level random effects is cumbersome. Therefore, many modelers currently resort to Berkeley Madonna (BM) to perform exploratory simulations instead of performing them in R. BM does provide some excellent interactivity features and is fast, but is: \n\n- inferior regarding plotting functionality\n- cumbersome regarding implementation of dose regimens and multi-level variability \n- not open source/free. \n\nIn essence, the `PKPDsim` tool is an attempt to take the best features of BM, and offer them whithin the R environment so that the modeler can take advantage of e.g. the plotting and visualization tools in R. The library aims to facilitate simulation of any dosing regimen for PKPD mixed-effects models and is implemented as a wrapper around the deSolve library. Inputs for the main function (`sim_ode`) include: a function describing the ODE system, an object describing the regimen, a list of fixed-effects, and a matrix describing the between patient variability. The `PKPDsim` library can dynamically generate Shiny frontends (see figure below) offering features similar to BM. \n\n![Shiny](images/shiny.png \"Shiny example\")\n\nRecently, Inria (through the DDMoRe consortium) released a similar library for R (`mlxR`, https://github.com/MarcLavielle/mlxR). While the `mlxR` library offers some great features, the main differences are that `mlxR`:\n\n- uses a proprietary and closed-source simulation engine (`simulx`)\n- requires models specified in PharmML instead of R\n- (currently) does not offer functionality to dynamically generate Shiny apps\n\n## Future plans\n- will be released to CRAN\n- implement models as compiled C code\n\n## Installation\n\n```\nlibrary(devtools)\ninstall_github(\"ronkeizer/PKPDsim\")\nlibrary(PKPDsim)\n```\n\n## Example single subject\n\n```\n# Single subject simulation (population values)\np <- list(CL = 38.48, V  = 7.4,\n          Q2 = 7.844, V2 = 5.19,\n          Q3 = 9.324, V3 = 111)\n\nr1 <- regimen(amt = 100,\n              times = c(0, 24, 36),\n              type = \"infusion\")\n\ndat <- sim_ode (ode = pk_3cmt_iv,\n                par = p,\n                regimen = r1)\n\nggplot(dat, aes(x=t, y=y)) +\n  geom_line() +\n  scale_y_log10() +\n  facet_wrap(~comp)\n```\n\n## Example custom ODE\n\n```\npk_1cmt_iv <- function (t, A, p) {\n  with(p, {\n    KEL <-  CL/V\n    dAdt_1 <- -KEL*A[1] + rate\n    return ( list ( c (  dAdt_1 ) ) )\n  })\n}\nattributes(pk_1cmt_iv) <- list(obs = list (cmt = 1, scale = \"V\"))\np <- list(CL = 38.48, V  = 7.4)\n\ndat <- sim_ode (ode = pk_1cmt_iv,\n                par = p,\n                regimen = r1)\n\nggplot(dat, aes(x=t, y=y)) +\n  geom_line() +\n  scale_y_log10() +\n  facet_wrap(~comp)\n```\n\n\n## Example between-subject variability\n```\nomega <- c(0.3,       # IIV CL\n           0.1, 0.3)  # IIV V\n\ndat <- sim_ode (ode = pk_3cmt_iv,\n                par = p,\n                omega = omega,\n                n_ind = 20,\n                regimen = r1)\n\nggplot(dat, aes(x=t, y=y, colour=factor(id), group=id)) +\n  geom_line() +\n  scale_y_log10() +\n  facet_wrap(~comp)\n```\n\n## Example Shiny\n```\nlibrary(PKPDsim)\n\np <- list(CL = 38.48,\n          V  = 7.4,\n          Q2 = 7.844,\n          V2 = 5.19,\n          Q3 = 9.324,\n          V3 = 111)\n\nomega <- c(0.3,       # IIV CL\n           0.1, 0.3)  # IIV V\n\nsim_ode_shiny(ode = pk_3cmt_iv,\n              par = p,\n              omega = omega)\n```\n",
    "created" : 1425927489230.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "17547280",
    "id" : "58430A14",
    "lastKnownWriteTime" : 1425932082,
    "path" : "~/git/PKPDsim/README.MD",
    "project_path" : "README.MD",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "markdown"
}