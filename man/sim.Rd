% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.R
\name{sim}
\alias{sim}
\title{Simulate ODE or analytical equation}
\usage{
sim(ode = NULL, analytical = NULL, parameters = list(), omega = NULL,
  omega_type = "exponential", res_var = NULL, seed = NULL,
  sequence = NULL, n_ind = 1, regimen = NULL, covariates = NULL,
  covariates_table = NULL, covariates_implementation = list(),
  A_init = NULL, only_obs = FALSE, obs_step_size = 1,
  int_step_size = 0.1, t_max = NULL, t_obs = NULL, t_tte = NULL,
  duplicate_t_obs = FALSE, extra_t_obs = TRUE, rtte = FALSE,
  checks = TRUE, verbose = FALSE, return_design = FALSE,
  output_include = list(parameters = FALSE, covariates = FALSE), ...)
}
\arguments{
\item{ode}{function describing the ODE system}

\item{analytical}{analytical equation (function)}

\item{parameters}{model parameters}

\item{omega}{vector describing the lower-diagonal of the between-subject variability matrix}

\item{omega_type}{exponential or normal, specified as vector}

\item{res_var}{residual variability. Expected a list with arguments `prop`, `add`, and/or `exp`. NULL by default.}

\item{seed}{set seed for reproducible results}

\item{sequence}{if not NULL specifies the pseudo-random sequence to use, e.g. "halton" or "sobol". See `mvrnorm2` for more details.}

\item{n_ind}{number of individuals to simulate}

\item{regimen}{a regimen object created using the regimen() function}

\item{covariates}{list of covariates (for single individual) created using `new_covariate()` function}

\item{covariates_table}{data.frame (or unnamed list of named lists per individual) with covariate values}

\item{covariates_implementation}{used only for `covariates_table`, a named list of covariate implementation methods per covariate, e.g. `list(WT = "interpolate", BIN = "locf")`}

\item{A_init}{vector with the initial state of the ODE system}

\item{only_obs}{only return the observations}

\item{obs_step_size}{the step size between the observations}

\item{int_step_size}{the step size for the numerical integrator}

\item{t_max}{maximum simulation time, if not specified will pick the end of the regimen as maximum}

\item{t_obs}{vector of observation times, only output these values (only used when t_obs==NULL)}

\item{t_tte}{vector of observation times for time-to-event simulation}

\item{duplicate_t_obs}{allow duplicate t_obs in output? E.g. for optimal design calculations when t_obs = c(0,1,2,2,3). Default is FALSE.}

\item{extra_t_obs}{include extra t_obs in output for bolus doses? This is only activated when `t_obs` is not specified manually. E.g. for a bolus dose at t=24, if FALSE, PKPDsim will output only the trough, so for bolus doses you might want to switch this setting to TRUE. When set to "auto" (default), it will be TRUE by default, but will switch to FALSE whenever `t_obs` is specified manually.}

\item{rtte}{should repeated events be allowed (FALSE by default)}

\item{checks}{perform input checks? Default is TRUE. For calculations where sim_ode is invoked many times (e.g. population estimation, optimal design) it makes sense to switch this to FALSE (after confirming the input is correct) to improve speed.}

\item{verbose}{show more output}

\item{return_design}{Useful for iterative functions like estimation. Only prepares the design (event table) for the simulation, does not run the actual simulation.}

\item{output_include}{list specyfing what to include in output table, with keys `parameters` and `covariates`. Both are FALSE by default.}

\item{...}{extra parameters}
}
\value{
a data frame of compartments with associated concentrations at requested times
}
\description{
Simulates a specified regimen using ODE system or analytical equation
}
\examples{
\dontrun{
library(ggplot2)
library(PKPDsim)
p <- list(CL = 38.48,
         V  = 7.4,
         Q2 = 7.844,
         V2 = 5.19,
         Q3 = 9.324,
         V3 = 111)

r1 <- new_regimen(amt = 100,
             times = c(0, 24, 36),
             type = "infusion")

dat <- sim_ode (ode = "pk_3cmt_iv",
               par = p,
               regimen = r1)

ggplot(dat, aes(x=t, y=y)) +
 geom_line() +
 scale_y_log10() +
 facet_wrap(~comp)

# repeat with IIV:
omega <- c(0.3,       # IIV CL
          0.1, 0.3)  # IIV V

dat <- sim (ode = "pk_3cmt_iv",
               par = p,
               omega = omega,
               n_ind = 20,
               regimen = r1)

ggplot(dat, aes(x=t, y=y, colour=factor(id), group=id)) +
 geom_line() +
 scale_y_log10() +
 facet_wrap(~comp)
}
}
\seealso{
\link{sim_ode_shiny}
}
